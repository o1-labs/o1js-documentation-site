"use strict";(self.webpackChunkdocumentation_site=self.webpackChunkdocumentation_site||[]).push([[24233],{28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>l});var a=n(96540);const r={},s=a.createContext(r);function i(e){const t=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),a.createElement(s.Provider,{value:t},e.children)}},48070:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"api-reference/type-aliases/ProvableHashable","title":"ProvableHashable","description":"Defined in124","source":"@site/docs/api-reference/type-aliases/ProvableHashable.mdx","sourceDirName":"api-reference/type-aliases","slug":"/api-reference/type-aliases/ProvableHashable","permalink":"/documentation-site/api-reference/type-aliases/ProvableHashable","draft":false,"unlisted":false,"editUrl":"https://github.com/docs/api-reference/type-aliases/ProvableHashable.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"ProvableExtended","permalink":"/documentation-site/api-reference/type-aliases/ProvableExtended"},"next":{"title":"ProvablePure","permalink":"/documentation-site/api-reference/type-aliases/ProvablePure"}}');var r=n(74848),s=n(28453);const i={},l=void 0,o={},c=[{value:"Type declaration",id:"type-declaration",level:2},{value:"toInput()",id:"toinput",level:3},{value:"Parameters",id:"parameters",level:4},{value:"x",id:"x",level:5},{value:"Returns",id:"returns",level:4},{value:"Type Parameters",id:"type-parameters",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",h5:"h5",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"type ProvableHashable<T, TValue> = ProvableWithEmpty<T, TValue> & {\n  toInput: (x: T) => HashInput;\n};\n"})}),"\n",(0,r.jsxs)(t.p,{children:["Defined in: ",(0,r.jsx)(t.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/types/provable-intf.ts#L124",children:"lib/provable/types/provable-intf.ts:124"})]}),"\n",(0,r.jsx)(t.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,r.jsx)(t.h3,{id:"toinput",children:"toInput()"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"toInput: (x: T) => HashInput;\n"})}),"\n",(0,r.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsx)(t.h5,{id:"x",children:"x"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.code,{children:"T"})}),"\n",(0,r.jsx)(t.h4,{id:"returns",children:"Returns"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.code,{children:"HashInput"})}),"\n",(0,r.jsx)(t.h2,{id:"type-parameters",children:"Type Parameters"}),"\n",(0,r.jsxs)(t.p,{children:["\u2022 ",(0,r.jsx)(t.strong,{children:"T"})]}),"\n",(0,r.jsxs)(t.p,{children:["\u2022 ",(0,r.jsx)(t.strong,{children:"TValue"})," = ",(0,r.jsx)(t.code,{children:"any"})]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);