"use strict";(self.webpackChunkdocumentation_site=self.webpackChunkdocumentation_site||[]).push([[21614],{28453:(e,r,n)=>{n.d(r,{R:()=>c,x:()=>a});var t=n(96540);const i={},s=t.createContext(i);function c(e){const r=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),t.createElement(s.Provider,{value:r},e.children)}},98595:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>o,contentTitle:()=>a,default:()=>l,frontMatter:()=>c,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"api-reference/functions/createForeignCurve","title":"createForeignCurve","description":"Defined in433","source":"@site/docs/api-reference/functions/createForeignCurve.mdx","sourceDirName":"api-reference/functions","slug":"/api-reference/functions/createForeignCurve","permalink":"/documentation-site/api-reference/functions/createForeignCurve","draft":false,"unlisted":false,"editUrl":"https://github.com/docs/api-reference/functions/createForeignCurve.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"createEcdsa","permalink":"/documentation-site/api-reference/functions/createEcdsa"},"next":{"title":"createForeignField","permalink":"/documentation-site/api-reference/functions/createForeignField"}}');var i=n(74848),s=n(28453);const c={},a=void 0,o={},d=[{value:"Parameters",id:"parameters",level:2},{value:"params",id:"params",level:3},{value:"Returns",id:"returns",level:2}];function u(e){const r={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ts",children:"function createForeignCurve(params: CurveParams): typeof ForeignCurve\n"})}),"\n",(0,i.jsxs)(r.p,{children:["Defined in: ",(0,i.jsx)(r.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/crypto/foreign-curve.ts#L433",children:"lib/provable/crypto/foreign-curve.ts:433"})]}),"\n",(0,i.jsxs)(r.p,{children:["Create a class representing an elliptic curve group, which is different from the native ",(0,i.jsx)(r.a,{href:"/documentation-site/api-reference/classes/Group",children:"Group"}),"."]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ts",children:"const Curve = createForeignCurve(Crypto.CurveParams.Secp256k1);\n"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"createForeignCurve(params)"})," takes curve parameters ",(0,i.jsx)(r.code,{children:"CurveParams"})," as input.\nWe support ",(0,i.jsx)(r.code,{children:"modulus"})," and ",(0,i.jsx)(r.code,{children:"order"})," to be prime numbers up to 259 bits."]}),"\n",(0,i.jsxs)(r.p,{children:["The returned ",(0,i.jsx)(r.a,{href:"/documentation-site/api-reference/classes/ForeignCurveNotNeeded",children:"ForeignCurveNotNeeded"})," class represents a ",(0,i.jsx)(r.em,{children:"non-zero curve point"})," and supports standard\nelliptic curve operations like point addition and scalar multiplication."]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"/documentation-site/api-reference/classes/ForeignCurveNotNeeded",children:"ForeignCurveNotNeeded"})," also includes to associated foreign fields: ",(0,i.jsx)(r.code,{children:"ForeignCurve.Field"})," and ",(0,i.jsx)(r.code,{children:"ForeignCurve.Scalar"}),", see ",(0,i.jsx)(r.a,{href:"/documentation-site/api-reference/functions/createForeignField",children:"createForeignField"}),"."]}),"\n",(0,i.jsx)(r.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsx)(r.h3,{id:"params",children:"params"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.code,{children:"CurveParams"})}),"\n",(0,i.jsx)(r.h2,{id:"returns",children:"Returns"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.em,{children:"typeof"})," ",(0,i.jsx)(r.a,{href:"/documentation-site/api-reference/classes/ForeignCurve",children:(0,i.jsx)(r.code,{children:"ForeignCurve"})})]})]})}function l(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}}}]);