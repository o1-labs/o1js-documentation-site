"use strict";(self.webpackChunkdocumentation_site=self.webpackChunkdocumentation_site||[]).push([[95567],{56302:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>d,contentTitle:()=>c,default:()=>l,frontMatter:()=>i,metadata:()=>a,toc:()=>o});const a=JSON.parse('{"id":"basic-types/keypairs-and-signatures","title":"Keypairs and Signatures","description":"Native Signatures","source":"@site/versioned_docs/version-2.4.0/basic-types/keypairs-and-signatures.mdx","sourceDirName":"basic-types","slug":"/basic-types/keypairs-and-signatures","permalink":"/documentation-site/2.4.0/basic-types/keypairs-and-signatures","draft":false,"unlisted":false,"editUrl":"https://github.com/versioned_docs/version-2.4.0/basic-types/keypairs-and-signatures.mdx","tags":[],"version":"2.4.0","frontMatter":{"title":"Keypairs and Signatures"},"sidebar":"docs","previous":{"title":"Integers","permalink":"/documentation-site/2.4.0/basic-types/int"},"next":{"title":"Merkle Trees","permalink":"/documentation-site/2.4.0/basic-types/merkle-trees"}}');var n=t(74848),r=t(28453);t(58069);const i={title:"Keypairs and Signatures"},c=void 0,d={},o=[{value:"Native Signatures",id:"native-signatures",level:3},{value:"ECDSA Signatures (Ethereum)",id:"ecdsa-signatures-ethereum",level:3}];function u(e){const s={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h3,{id:"native-signatures",children:"Native Signatures"}),"\n",(0,n.jsxs)(s.p,{children:["The ",(0,n.jsx)(s.code,{children:"Signature"})," class in o1js refers to a Schnorr signature over the Pallas curve.  It works with the ",(0,n.jsx)(s.code,{children:"PrivateKey"})," and ",(0,n.jsx)(s.code,{children:"PublicKey"})," classes to\nsign and verify messages of ",(0,n.jsx)(s.a,{href:"/documentation-site/basic-types/field",children:"Field"})," arrays."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",metastring:"file=../snippets/keypairs-and-signatures/keypairs-and-signatures.ts start=start_native_signature end=end_native_signature",children:'const privateKey = PrivateKey.random();\nconst publicKey = privateKey.toPublicKey();\nconst message = CircuitString.fromString("Hello World!").values.map((char) =>\n  char.toField()\n);\nconst signature = Signature.create(privateKey, message);\nsignature.verify(publicKey, message);\n'})}),"\n",(0,n.jsx)(s.h3,{id:"ecdsa-signatures-ethereum",children:"ECDSA Signatures (Ethereum)"}),"\n",(0,n.jsx)(s.p,{children:"ECDSA signatures are supported as well.  In general, elliptic curve cryptography is supported over foreign curves, but you can\nfollow the snippet below for verifying signatures specifically for an Ethereum configuration."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",metastring:"file=../snippets/keypairs-and-signatures/keypairs-and-signatures.ts start=start_ethereum_signature end=end_ethereum_signature",children:'class Secp256k1 extends createForeignCurve(Crypto.CurveParams.Secp256k1) {}\nclass Ecdsa extends createEcdsa(Secp256k1) {}\nclass Bytes32 extends Bytes(32) {}\n\nconst messageEth = "Secrets hidden, truth in ZKPs ;)";\n\n// compressed public key generated by ethers.js\nconst publicKeyEth = Secp256k1.fromEthers(\n  "0x020957928494c38660d254dc03ba78f091a4aea0270afb447f193c4daf6648f02b"\n);\n\n// ECDSA signature generated by ethers.js\nconst signatureEth = Ecdsa.fromHex(\n  "0x6fada464c3bc2ae127f8c907c0c4bccbd05ba83a584156edb808b7400346b4c9558598d9c7869f5fd75d81128711f6621e4cb5ba2f52a2a51c46c859f49a833a1b"\n);\nconst msgBytes = Bytes32.fromString(messageEth);\n\nsignatureEth.verifyEthers(msgBytes, publicKeyEth);\n'})}),"\n",(0,n.jsxs)(s.p,{children:["Read more at the language reference: ",(0,n.jsx)(s.a,{href:"/documentation-site/api-reference/classes/Signature",children:"Signature"}),", ",(0,n.jsx)(s.a,{href:"/documentation-site/api-reference/classes/PrivateKey",children:"PrivateKey"}),", ",(0,n.jsx)(s.a,{href:"/documentation-site/api-reference/classes/PublicKey",children:"PublicKey"}),", ",(0,n.jsx)(s.a,{href:"/documentation-site/api-reference/functions/createEcdsa",children:"createEcdsa"}),"."]})]})}function l(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}}}]);