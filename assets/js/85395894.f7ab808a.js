"use strict";(self.webpackChunkdocumentation_site=self.webpackChunkdocumentation_site||[]).push([[66414],{28453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>c});var i=r(96540);const o={},t=i.createContext(o);function s(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(t.Provider,{value:n},e.children)}},40135:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"api-reference/functions/Option","title":"Option","description":"Defined in34","source":"@site/versioned_docs/version-2.4.0/api-reference/functions/Option.mdx","sourceDirName":"api-reference/functions","slug":"/api-reference/functions/Option","permalink":"/documentation-site/2.4.0/api-reference/functions/Option","draft":false,"unlisted":false,"editUrl":"https://github.com/versioned_docs/version-2.4.0/api-reference/functions/Option.mdx","tags":[],"version":"2.4.0","frontMatter":{},"sidebar":"docs","previous":{"title":"MerkleWitness","permalink":"/documentation-site/2.4.0/api-reference/functions/MerkleWitness"},"next":{"title":"Reducer","permalink":"/documentation-site/2.4.0/api-reference/functions/Reducer"}}');var o=r(74848),t=r(28453);const s={},c=void 0,a={},l=[{value:"Type Parameters",id:"type-parameters",level:2},{value:"Parameters",id:"parameters",level:2},{value:"type",id:"type",level:3},{value:"Returns",id:"returns",level:2},{value:"Example",id:"example",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"function Option<A>(type: A): ProvableInferPureFrom<A, Option<InferProvable<A>, InferValue<A>>, InferValue<A> | undefined> & (option: {\n  isSome: Bool;\n  value: InferProvable<A>;\n }) => Option<InferProvable<A>, InferValue<A>> & {\n  from: Option<InferProvable<A>, InferValue<A>>;\n  fromValue: Option<InferProvable<A>, InferValue<A>>;\n  none: Option<InferProvable<A>, InferValue<A>>;\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Defined in: ",(0,o.jsx)(n.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/option.ts#L34",children:"lib/provable/option.ts:34"})]}),"\n",(0,o.jsx)(n.p,{children:"Define an optional version of a provable type."}),"\n",(0,o.jsx)(n.h2,{id:"type-parameters",children:"Type Parameters"}),"\n",(0,o.jsxs)(n.p,{children:["\u2022 ",(0,o.jsx)(n.strong,{children:"A"})," ",(0,o.jsx)(n.em,{children:"extends"})," ",(0,o.jsx)(n.a,{href:"/documentation-site/2.4.0/api-reference/type-aliases/ProvableType",children:(0,o.jsx)(n.code,{children:"ProvableType"})})]}),"\n",(0,o.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,o.jsx)(n.h3,{id:"type",children:"type"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:"A"})}),"\n",(0,o.jsx)(n.h2,{id:"returns",children:"Returns"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"ProvableInferPureFrom"}),"<",(0,o.jsx)(n.code,{children:"A"}),", ",(0,o.jsx)(n.a,{href:"/documentation-site/2.4.0/api-reference/type-aliases/Option",children:(0,o.jsx)(n.code,{children:"Option"})}),"<",(0,o.jsx)(n.a,{href:"/documentation-site/2.4.0/api-reference/type-aliases/InferProvable",children:(0,o.jsx)(n.code,{children:"InferProvable"})}),"<",(0,o.jsx)(n.code,{children:"A"}),">, ",(0,o.jsx)(n.code,{children:"InferValue"}),"<",(0,o.jsx)(n.code,{children:"A"}),">>, ",(0,o.jsx)(n.code,{children:"InferValue"}),"<",(0,o.jsx)(n.code,{children:"A"}),"> | ",(0,o.jsx)(n.code,{children:"undefined"}),"> & (",(0,o.jsx)(n.code,{children:"option"}),": {\n",(0,o.jsx)(n.code,{children:"isSome"}),": ",(0,o.jsx)(n.a,{href:"/documentation-site/2.4.0/api-reference/type-aliases/Bool",children:(0,o.jsx)(n.code,{children:"Bool"})}),";\n",(0,o.jsx)(n.code,{children:"value"}),": ",(0,o.jsx)(n.a,{href:"/documentation-site/2.4.0/api-reference/type-aliases/InferProvable",children:(0,o.jsx)(n.code,{children:"InferProvable"})}),"<",(0,o.jsx)(n.code,{children:"A"}),">;\n}) => ",(0,o.jsx)(n.a,{href:"/documentation-site/2.4.0/api-reference/type-aliases/Option",children:(0,o.jsx)(n.code,{children:"Option"})}),"<",(0,o.jsx)(n.a,{href:"/documentation-site/2.4.0/api-reference/type-aliases/InferProvable",children:(0,o.jsx)(n.code,{children:"InferProvable"})}),"<",(0,o.jsx)(n.code,{children:"A"}),">, ",(0,o.jsx)(n.code,{children:"InferValue"}),"<",(0,o.jsx)(n.code,{children:"A"}),">> & {\n",(0,o.jsx)(n.code,{children:"from"}),": ",(0,o.jsx)(n.a,{href:"/documentation-site/2.4.0/api-reference/type-aliases/Option",children:(0,o.jsx)(n.code,{children:"Option"})}),"<",(0,o.jsx)(n.a,{href:"/documentation-site/2.4.0/api-reference/type-aliases/InferProvable",children:(0,o.jsx)(n.code,{children:"InferProvable"})}),"<",(0,o.jsx)(n.code,{children:"A"}),">, ",(0,o.jsx)(n.code,{children:"InferValue"}),"<",(0,o.jsx)(n.code,{children:"A"}),">>;\n",(0,o.jsx)(n.code,{children:"fromValue"}),": ",(0,o.jsx)(n.a,{href:"/documentation-site/2.4.0/api-reference/type-aliases/Option",children:(0,o.jsx)(n.code,{children:"Option"})}),"<",(0,o.jsx)(n.a,{href:"/documentation-site/2.4.0/api-reference/type-aliases/InferProvable",children:(0,o.jsx)(n.code,{children:"InferProvable"})}),"<",(0,o.jsx)(n.code,{children:"A"}),">, ",(0,o.jsx)(n.code,{children:"InferValue"}),"<",(0,o.jsx)(n.code,{children:"A"}),">>;\n",(0,o.jsx)(n.code,{children:"none"}),": ",(0,o.jsx)(n.a,{href:"/documentation-site/2.4.0/api-reference/type-aliases/Option",children:(0,o.jsx)(n.code,{children:"Option"})}),"<",(0,o.jsx)(n.a,{href:"/documentation-site/2.4.0/api-reference/type-aliases/InferProvable",children:(0,o.jsx)(n.code,{children:"InferProvable"})}),"<",(0,o.jsx)(n.code,{children:"A"}),">, ",(0,o.jsx)(n.code,{children:"InferValue"}),"<",(0,o.jsx)(n.code,{children:"A"}),">>;\n}"]}),"\n",(0,o.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"class OptionUInt64 extends Option(UInt64) {}\n\n// create an optional UInt64\nlet some = OptionUInt64.from(5n);\nlet none = OptionUInt64.none();\n\n// get back a UInt64\nlet five: UInt64 = some.assertSome('must have a value');\nlet zero: UInt64 = none.orElse(0n); // specify a default value\n"})})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);