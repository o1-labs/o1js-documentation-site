"use strict";(self.webpackChunkdocumentation_site=self.webpackChunkdocumentation_site||[]).push([[9555],{8841:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"getting-started/built-in-types","title":"Built-in Types","description":"Built-in Types","source":"@site/docs/getting-started/built-in-types.mdx","sourceDirName":"getting-started","slug":"/getting-started/built-in-types","permalink":"/documentation-site/getting-started/built-in-types","draft":false,"unlisted":false,"editUrl":"https://github.com/docs/getting-started/built-in-types.mdx","tags":[],"version":"current","frontMatter":{"title":"Built-in Types"},"sidebar":"docs","previous":{"title":"Field","permalink":"/documentation-site/getting-started/field"},"next":{"title":"AccountUpdate","permalink":"/documentation-site/api-reference/classes/AccountUpdate"}}');var s=n(4848),r=n(8453);n(8069);const l={title:"Built-in Types"},c=void 0,d={},a=[{value:"Built-in Types",id:"built-in-types",level:2},{value:"Integers",id:"integers",level:3}];function o(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"built-in-types",children:"Built-in Types"}),"\n",(0,s.jsxs)(t.p,{children:["o1js has several built-in types on top of ",(0,s.jsx)(t.a,{href:"/documentation-site/getting-started/field",children:"Field"}),".  Each type can be converted to an array of Field elements."]}),"\n",(0,s.jsx)(t.h3,{id:"integers",children:"Integers"}),"\n",(0,s.jsx)(t.p,{children:"o1js exports a few different integer types:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Unsigned integers: ",(0,s.jsx)(t.code,{children:"UInt8"}),", ",(0,s.jsx)(t.code,{children:"UInt32"}),", ",(0,s.jsx)(t.code,{children:"UInt64"})]}),"\n",(0,s.jsxs)(t.li,{children:["Signed integers: ",(0,s.jsx)(t.code,{children:"Int64"})]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"These types have range checks built in so that they will throw on overflow or underflow."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",metastring:"file=../../snippets/built-in-types/built-in-types.ts start=start_int_instances end=end_int_instances",children:'const uint8 = new UInt8(1n);\nconst uint32 = new UInt32(2 ** 32 - 1);\nconst uint64 = new UInt64("10");\nconst int64 = Int64.create(uint64, Sign.minusOne);\nconst alternative_int64 = Int64.from(20);\n'})})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}}}]);